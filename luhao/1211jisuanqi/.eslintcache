[{"D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\index.js":"1","D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\reportWebVitals.js":"2","D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":7597,"mtime":1607657538924,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ogpo8b",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\index.js",[],["16","17"],"D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\reportWebVitals.js",[],"D:\\LH\\GitHub\\newcomerTraining\\luhao\\1130jisuanqi\\src\\App.js",["18","19","20","21","22","23"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nlet numeral = require('numeral')\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',             //结果数据存放\n      text: '0',            //显示数据存放\n      operator: '',         //存放运算符\n      operatorFlag: false,  //运算符替换标志\n      OperatorFlag: false,  //运算符标志\n      clearFlag: false,     //清零标志\n      decimalFlag: false    //小数点标志\n    }\n  }\n\n  /**\n   * Notes:对数据进行重置\n   * User: LuHao\n   * DateTime: 2020/12/2 16:03\n   */\n  clear() {\n    this.setState({\n      text: '0',\n      data: '',\n      clearFlag: false,\n      operatorFlag: false,\n      OperatorFlag: false,\n      decimalFlag: false\n    })\n\n  }\n\n  /**\n   * Notes: 再次输入计算，清除上次一次计算结果\n   * User: LuHao\n   * DateTime: 2020/12/2 16:58\n   */\n  again(props) {\n    this.setState({\n      text: props,\n      data: '',\n      clearFlag: false,\n      operatorFlag: false,\n      OperatorFlag: false,\n      decimalFlag: false\n    })\n  }\n\n  /**\n   * Notes: 将数据显示出来\n   * User: LuHao\n   * DateTime: 2020/12/2 16:57\n   */\n  appear(props) {\n    if (this.state.text === '0') {\n      this.setState({\n        text: props\n      })\n    } else {\n      this.setState({\n        text: `${this.state.text}${props}`\n      })\n    }\n  }\n\n  /**\n   * Notes: 替换显示的运算符号\n   * User: LuHao\n   * DateTime: 2020/12/2 16:56\n   */\n  replace(props) {\n    this.setState({\n      text: this.state.text.slice(0, -1) + props\n    })\n  }\n\n  /**\n   * Notes: 计算运算结果\n   * User: LuHao\n   * DateTime: 2020/12/2 16:56\n   */\n  result(props) {\n    this.appear(props)\n    let sum = 0         //数据结果存放\n    let flag = 0        //数据正负状态位\n    let number=0\n    this.setState({\n      clearFlag: true,\n      operatorFlag: false,\n      OperatorFlag: false,\n      decimalFlag: false\n    })\n    if (this.state.text[0] == '-') {\n      flag = -1\n    } else {\n      flag = 1\n    }\n    let reg = /(0|([1-9]\\d*))(\\.\\d+)*/g\n    let data = this.state.text.match(reg)\n    if (data.length < 2) {\n      this.setState({\n        data: data[0] * flag\n      })\n    } else {\n      switch (this.state.operator) {\n        case \"+\":\n          number = numeral(parseFloat(data[0]));\n          sum = number.add(parseFloat(data[1]));\n          this.setState({data: sum._value});\n          break;\n        case \"-\":\n          number = numeral(parseFloat(data[0]));\n          sum = number.subtract(parseFloat(data[1]));\n          this.setState({data: sum._value});\n          break;\n        case \"X\":\n          number = numeral(parseFloat(data[0]));\n          sum = number.multiply(parseFloat(data[1]));\n          this.setState({data: sum._value});\n          break;\n        case \"/\":\n          number = numeral(parseFloat(data[0]));\n          sum = number.divide(parseFloat(data[1]));\n          this.setState({data: sum._value});\n          break;\n      }\n      this.write(sum)\n    }\n  }\n  /**\n   * Notes: 将计算结果写入数据库\n   * User: LuHao\n   * DateTime: 2020/12/11 10:38\n  */\n  write(props){\n    const url = `http://localhost:8000/index.php/datatest/add?count=${props._value}`;\n    fetch(url)\n        .then(response => response.json())\n        .then(res=>{\n          // console.log(1)\n        })\n  }\n  /**\n   * Notes: 显示存入数据库的数据\n   * User: LuHao\n   * DateTime: 2020/12/11 11:26\n  */\n  read(){\n    const url = `http://localhost:8000/index.php/datatest`;\n    fetch(url)\n        .then(response => response.json())\n        .then(res=>{\n          res.map(function (value){\n            console.log('第',value.id,'次, 结果',value.count)\n          })\n        })\n  }\n  /**\n   * Notes: 输入运算符号存储、显示\n   * User: LuHao\n   * DateTime: 2020/12/2 16:59\n   */\n  operator(props) {\n    if (this.state.OperatorFlag) {\n      this.result('=')\n    } else if (this.state.clearFlag) {\n      this.again(props)\n    } else if (this.state.operatorFlag == false) {\n      this.appear(props)\n      this.setState({\n        operator: props,\n        operatorFlag: true\n      })\n    } else {\n      this.replace(props)\n      this.setState({\n        operator: props,\n      })\n    }\n    this.setState({\n      decimalFlag: false,               //标志位 可以再次输入小数点\n    })\n  }\n\n  /**\n   * Notes: 输入数字存储、显示\n   * User: LuHao\n   * DateTime: 2020/12/2 16:48\n   */\n  data(props) {\n    //数字输入，有清零标志  作清零理处理\n    if (this.state.clearFlag) {\n      this.again(props)\n    } else {\n      this.appear(props)\n    }\n    //如运算符号已输入，不得再次输入\n    if (this.state.operatorFlag) {\n      this.setState({\n        OperatorFlag: true,             //标志位 再次输入符号判定\n      })\n    }\n\n  }\n\n  /**\n   * Notes: 判定一个数字是否存在小数点\n   * User: LuHao\n   * DateTime: 2020/12/2 16:47\n   */\n  decimal(props) {\n    if (this.state.decimalFlag == false) {\n      this.appear(props)\n      this.setState({\n        decimalFlag: true,\n      })\n    }\n  }\n\n  render() {\n    const {data, text} = this.state;\n    return (\n        <div id=\"main\">\n          <div id=\"count\">\n            <div id=\"result\">{text}\n              <div className=\"data\">{data}</div>\n              <div className=\"record\" onClick={()=>this.read()}>纪录</div>\n            </div>\n            <div id=\"buttons\">\n              <div className=\"ranks\">\n                <div className=\"button firstButton\" onClick={() => this.clear()}>AC</div>\n                <div className=\"button firstButton\">\n                  <div>\n                    <span className=\"add\">+</span>\n                    /\n                    <span className=\"del\">-</span>\n                  </div>\n\n\n                </div>\n                <div className=\"button firstButton\">%</div>\n                <div className=\"button buttonSymbol\" onClick={() => this.operator('/')}>÷</div>\n              </div>\n              <div className=\"ranks\">\n                <div className=\"button\" onClick={() => this.data(7)}>7</div>\n                <div className=\"button\" onClick={() => this.data(8)}>8</div>\n                <div className=\"button\" onClick={() => this.data(9)}>9</div>\n                <div className=\"button buttonSymbol\" onClick={() => this.operator('X')}>X</div>\n              </div>\n              <div className=\"ranks\">\n                <div className=\"button\" onClick={() => this.data(4)}>4</div>\n                <div className=\"button\" onClick={() => this.data(5)}>5</div>\n                <div className=\"button\" onClick={() => this.data(6)}>6</div>\n                <div className=\"button buttonSymbol\" onClick={() => this.operator('-')}>-</div>\n              </div>\n              <div className=\"ranks\">\n                <div className=\"button\" onClick={() => this.data(1)}>1</div>\n                <div className=\"button\" onClick={() => this.data(2)}>2</div>\n                <div className=\"button\" onClick={() => this.data(3)}>3</div>\n                <div className=\"button buttonSymbol\" onClick={() => this.operator('+')}>+</div>\n              </div>\n              <div className=\"ranks\">\n                <div className=\"buttonZero\" onClick={() => this.data(0)}>0</div>\n                <div className=\"button\" onClick={() => this.decimal('.')}>.</div>\n                <div className=\"button buttonSymbol\" onClick={() => this.result('=')}>=</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n    )\n  }\n}\n\nexport default App;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":96,"column":28,"nodeType":"34","messageId":"35","endLine":96,"endColumn":30},{"ruleId":"36","severity":1,"message":"37","line":108,"column":7,"nodeType":"38","messageId":"39","endLine":129,"endColumn":8},{"ruleId":"40","severity":1,"message":"41","line":156,"column":19,"nodeType":"42","messageId":"43","endLine":156,"endColumn":28},{"ruleId":"32","severity":1,"message":"33","line":171,"column":40,"nodeType":"34","messageId":"35","endLine":171,"endColumn":42},{"ruleId":"32","severity":1,"message":"33","line":215,"column":32,"nodeType":"34","messageId":"35","endLine":215,"endColumn":34},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]